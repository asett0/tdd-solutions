import Data.Vect

allLengths : Vect n String -> Vect n Nat
allLengths [] = []
allLengths (word :: words) = length word :: allLengths words


insert : Ord elem => elem -> Vect len elem -> Vect (S len) elem
insert x [] = [x]
insert x (y :: ys) = case x < y of
                          False => y :: insert x ys
                          True => x :: y :: ys

inSort : Ord elem => Vect n elem -> Vect n elem
inSort [] = []
inSort (x :: xs) = insert x $ inSort xs

my_length : List a -> Nat
my_length [] = ?my_length_rhs_1
my_length (x :: xs) = ?my_length_rhs_2
